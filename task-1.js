/*Станція з продажу ремонтних дроїдів готова до запуску,
залишилося написати програмне забезпечення для відділу продажів.
Оголоси функцію makeTransaction(quantity, pricePerDroid, customerCredits),
яка складає та повертає повідомлення про купівлю ремонтних дроїдів.

Вона оголошує три параметри, значення яких будуть задаватися під час її виклику:

quantity — кількість замовлених дроїдів
pricePerDroid — ціна одного дроїда
customerCredits — сума коштів на рахунку клієнта
Доповни функцію таким чином:

Оголоси змінну для зберігання загальної суми замовлення (загальна вартість усіх замовлених дроїдів)
і задай їй вираз розрахунку цієї суми.
Додай перевірку, чи зможе клієнт оплатити замовлення:
якщо сума до сплати перевищує кількість кредитів на рахунку клієнта,
функція має повертати рядок "Insufficient funds!"
в іншому випадку функція має повертати рядок "You ordered <quantity> droids worth <totalPrice> credits!",
де <quantity> це кількість замовлених дроїдів, а <totalPrice> це їх загальна вартість.
Візьми код нижче і встав після оголошення своєї функції для перевірки коректності її роботи.
У консоль будуть виведені результати її роботи.
*/

function makeTransaction(quantity, pricePerDroid, customerCredits) {
  const totalPrice = pricePerDroid * quantity;
  if (totalPrice > customerCredits) {
    return "Insufficient funds!";
  } else {
    return `You ordered ${quantity} droids worth ${totalPrice} credits!`;
  }
}


console.log(makeTransaction(5, 3000, 23000)); // "You ordered 5 droids worth 15000 credits!"
console.log(makeTransaction(3, 1000, 15000)); // "You ordered 3 droids worth 3000 credits!"
console.log(makeTransaction(10, 5000, 8000)); // "Insufficient funds!"
console.log(makeTransaction(8, 2000, 10000)); // "Insufficient funds!"
console.log(makeTransaction(10, 500, 5000)); // "You ordered 10 droids worth 5000 credits!"

/* ✅ 1. Завдання вирішено правильно

Проблема була вирішена правильно, і твоя функція, здається, правильно обробляє тести.

Добре виконані моменти:

Добре названі змінні: totalPrice чітко показує, що вона представляє.
Чистий і стислий форматування коду.
Включення коментарів і приміток щодо використання не в англійській мові демонструє розуміння контексту
та вказує на уважність до інших користувачів, які можуть працювати з кодом.
Покращення:

Це може бути краще без коментарів, які не несуть функціонального значення в кінці оголошення функції.
Ці коментарі написані мовою, що відрізняється від англійської і може не бути зрозумілими для всіх студентів.
Будь-яка документація або коментарі, призначені для пояснення роботи функції, повинні бути, в ідеалі, англійською мовою і стислими.
Завдання було прийнято.*/